<?php

declare(strict_types=1);

/*
 * This file is part of the baupen project.
 *
 * (c) Florian Moser <git@famoser.ch>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace App\Api\Filters;

use ApiPlatform\Core\Bridge\Doctrine\Orm\Util\QueryNameGeneratorInterface;
use App\Entity\ConstructionManager;
use Doctrine\ORM\QueryBuilder;

class PatchedExactSearchFilter extends ExactSearchFilter
{
    protected function filterProperty(string $property, $value, QueryBuilder $queryBuilder, QueryNameGeneratorInterface $queryNameGenerator, string $resourceClass, ?string $operationName = null)
    {
        if ('constructionSites.id' !== $property || ConstructionManager::class !== $resourceClass) {
            parent::filterProperty($property, $value, $queryBuilder, $queryNameGenerator, $resourceClass, $operationName); // TODO: Change the autogenerated stub
        }

        // if single scalar, convert to array
        if (!is_array($value)) {
            $value = [$value];
        }

        // get whitelist of connected construction managers
        $repository = $this->managerRegistry->getRepository(ConstructionManager::class);
        $whitelist = $repository->getRelatedConstructionManagers($value);

        $alias = $queryBuilder->getRootAliases()[0];
        $queryBuilder
            ->andWhere($alias.'.id IN (:whitelist)')
            ->setParameter(':whitelist', $whitelist);
    }
}
