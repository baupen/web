agnes:
  version: 4

config:
  path: .agnes
  repository:
    url: git@gitlab.com:baupen/agnes-config/web.git

build:
  path: .build

github:
  api_token: '%env(GITHUB_API_TOKEN)%'
  repository: baupen/web

data:
  shared_folders:
    - var/persistent
    - var/transient

  files:
    - path: .env.local
      required: true
    - path: assets/report/logo.png
      required: true
    - path: var/transient/authorization/whitelists/developers.txt
      required: false

scripts:
  build:
    hook: build
    script:
      - 'composer install --verbose --prefer-dist --no-interaction --no-dev --optimize-autoloader --no-scripts'
      - 'npm install'
      - 'npm run build'
      - 'cp public/build/email.*.css public/build/email.css'
      - 'rm -rf node_modules'

  deploy:
    hook: deploy
    script:
      - '{{php}} bin/console cache:clear -n'
      - 'find var -type d -print0 | xargs -0 chmod 0755'
      - 'find var -type f -print0 | xargs -0 chmod 0644'
      - '{{php}} bin/console doctrine:migrations:migrate -n'
      - 'cd .. && find shared/var -type d -name "protocol_entries" -execdir mv protocol_entries issue_events \;'

  rollback:
    hook: rollback
    script:
      - 'cd $PREVIOUS_RELEASE_PATH && export MIGRATE_TO=$({{php}} bin/console doctrine:migrations:latest)'
      - '{{php}} bin/console doctrine:migrations:migrate $MIGRATE_TO -n'

  backup_db:
    script:
      - '{{php}} bin/console app:database:backup'

  restore_db:
    script:
      - '{{php}} bin/console app:database:restore'

tasks:
  deploy_dev_after_release:
    after: release
    task: deploy
    arguments: { target: '*:*:dev' }

policies:
  prod_releases_must_exist_on_staging:
    task: deploy
    type: stage_write_up
    layers:
      0: [staging]
      1: [prod]

  copy_only_to_lower_environments:
    task: copy
    type: stage_write_down
    layers:
      0: [dev, staging]
      1: [prod]

  copy_only_within_same_release:
    task: copy
    type: same_release
