security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        chain_provider:
            chain:
                providers: [construction_managers, api_tokens]
        construction_managers:
            entity:
                class: 'App\Entity\ConstructionManager'
                property: 'email'
        api_tokens:
            id: App\Security\AuthenticationTokenUserProvider

    encoders:
        App\Entity\ConstructionManager:
            algorithm: auto

    role_hierarchy:
        ROLE_ADMIN: [ROLE_CONSTRUCTION_MANAGER, ROLE_ALLOWED_TO_SWITCH]
        ROLE_CONSTRUCTION_MANAGER: [ROLE_CONSTRUCTION_SITE_MEMBER, ROLE_USER]
        ROLE_EXTERNAL_CONSTRUCTION_MANAGER: [ROLE_CONSTRUCTION_SITE_MEMBER, ROLE_USER]
        ROLE_CONSTRUCTION_SITE_MEMBER: [ROLE_API_USER]

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            lazy: true
            provider: chain_provider
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
                    - App\Security\TokenAuthenticator
                entry_point: App\Security\LoginFormAuthenticator
            logout:
                path: logout
                # where to redirect after logout
                target: login
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                path: /
                always_remember_me: true
            switch_user: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/recover, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/email, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/help, role: IS_AUTHENTICATED_ANONYMOUSLY }

        - { path: '^/resolve/.+', role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: '^/filtered/.+', role: IS_AUTHENTICATED_ANONYMOUSLY }

        - { path: ^/api, role: ROLE_API_USER }

        - { path: ^/set_locale, role: ROLE_USER }

        - { path: ^/construction_sites, role: ROLE_CONSTRUCTION_SITE_MEMBER }
        - { path: ^/maps, role: ROLE_CONSTRUCTION_SITE_MEMBER }
        - { path: ^/issues, role: ROLE_CONSTRUCTION_SITE_MEMBER }

        - { path: ^/, role: ROLE_CONSTRUCTION_MANAGER }
